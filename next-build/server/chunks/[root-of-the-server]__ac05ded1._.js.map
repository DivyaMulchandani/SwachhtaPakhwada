{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/divya%20mulchandani/OneDrive/Documents/RRU/SwachhtaPakhwada/src/app/api/generate-certificate/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\r\nimport { PDFDocument, StandardFonts, rgb } from 'pdf-lib';\r\nimport fs from 'fs';\r\nimport path from 'path';\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const body = await request.json();\r\n    const { name } = body;\r\n\r\n    // Read the certificate background image from the repo\r\n    const templatePath = path.join(process.cwd(), 'src/app/api/generate-certificate/certi.png');\r\n    const templateBytes = fs.readFileSync(templatePath);\r\n\r\n    // Create a new PDF document and embed the JPEG\r\n    const pdfDoc = await PDFDocument.create();\r\n    const jpgImage = await pdfDoc.embedJpg(templateBytes);\r\n\r\n    const pageWidth = jpgImage.width;\r\n    const pageHeight = jpgImage.height;\r\n\r\n    const page = pdfDoc.addPage([pageWidth, pageHeight]);\r\n\r\n    // Draw the background image to fill the page\r\n    page.drawImage(jpgImage, {\r\n      x: 0,\r\n      y: 0,\r\n      width: pageWidth,\r\n      height: pageHeight,\r\n    });\r\n\r\n    // Use a standard font for maximum compatibility\r\n    const font = await pdfDoc.embedFont(StandardFonts.HelveticaBold);\r\n\r\n    // Prepare the name text and sizing\r\n    const text = name ? String(name).toUpperCase() : '';\r\n    // Scale font size based on page width for responsiveness\r\n    const fontSize = Math.max(26, Math.floor(pageWidth * 0.03));\r\n    const textWidth = font.widthOfTextAtSize(text, fontSize);\r\n\r\n    // Calculate centered position (slightly below center vertically)\r\n    const x = (pageWidth - textWidth) / 2;\r\n    const y = pageHeight * 0.42;\r\n\r\n    // Draw a white shadow/border by drawing the same text slightly offset in white\r\n    page.drawText(text, {\r\n      x: x + 2,\r\n      y: y - 2,\r\n      size: fontSize + 2,\r\n      font,\r\n      color: rgb(1, 1, 1),\r\n    });\r\n\r\n    // Draw the main text in navy color\r\n    page.drawText(text, {\r\n      x,\r\n      y,\r\n      size: fontSize,\r\n      font,\r\n      color: rgb(0.0, 0.2, 0.6),\r\n    });\r\n\r\n    // Serialize the PDF\r\n    const pdfBytes = await pdfDoc.save();\r\n\r\n    // Return the PDF as a response\r\n    return new NextResponse(Buffer.from(pdfBytes), {\r\n      headers: {\r\n        'Content-Type': 'application/pdf',\r\n        'Content-Disposition': `attachment; filename=\"Certificate-${text.replace(/\\s+/g, '-') || 'recipient'}.pdf\"`,\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.error('Error generating certificate:', error);\r\n    return NextResponse.json(\r\n      { success: false, error: 'Failed to generate certificate' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;AAEO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,EAAE,IAAI,EAAE,GAAG;QAEjB,sDAAsD;QACtD,MAAM,eAAe,4GAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;QAC9C,MAAM,gBAAgB,wGAAE,CAAC,YAAY,CAAC;QAEtC,+CAA+C;QAC/C,MAAM,SAAS,MAAM,iKAAW,CAAC,MAAM;QACvC,MAAM,WAAW,MAAM,OAAO,QAAQ,CAAC;QAEvC,MAAM,YAAY,SAAS,KAAK;QAChC,MAAM,aAAa,SAAS,MAAM;QAElC,MAAM,OAAO,OAAO,OAAO,CAAC;YAAC;YAAW;SAAW;QAEnD,6CAA6C;QAC7C,KAAK,SAAS,CAAC,UAAU;YACvB,GAAG;YACH,GAAG;YACH,OAAO;YACP,QAAQ;QACV;QAEA,gDAAgD;QAChD,MAAM,OAAO,MAAM,OAAO,SAAS,CAAC,2KAAa,CAAC,aAAa;QAE/D,mCAAmC;QACnC,MAAM,OAAO,OAAO,OAAO,MAAM,WAAW,KAAK;QACjD,yDAAyD;QACzD,MAAM,WAAW,KAAK,GAAG,CAAC,IAAI,KAAK,KAAK,CAAC,YAAY;QACrD,MAAM,YAAY,KAAK,iBAAiB,CAAC,MAAM;QAE/C,iEAAiE;QACjE,MAAM,IAAI,CAAC,YAAY,SAAS,IAAI;QACpC,MAAM,IAAI,aAAa;QAEvB,+EAA+E;QAC/E,KAAK,QAAQ,CAAC,MAAM;YAClB,GAAG,IAAI;YACP,GAAG,IAAI;YACP,MAAM,WAAW;YACjB;YACA,OAAO,IAAA,0JAAG,EAAC,GAAG,GAAG;QACnB;QAEA,mCAAmC;QACnC,KAAK,QAAQ,CAAC,MAAM;YAClB;YACA;YACA,MAAM;YACN;YACA,OAAO,IAAA,0JAAG,EAAC,KAAK,KAAK;QACvB;QAEA,oBAAoB;QACpB,MAAM,WAAW,MAAM,OAAO,IAAI;QAElC,+BAA+B;QAC/B,OAAO,IAAI,gJAAY,CAAC,OAAO,IAAI,CAAC,WAAW;YAC7C,SAAS;gBACP,gBAAgB;gBAChB,uBAAuB,CAAC,kCAAkC,EAAE,KAAK,OAAO,CAAC,QAAQ,QAAQ,YAAY,KAAK,CAAC;YAC7G;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,OAAO,gJAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAO,OAAO;QAAiC,GAC1D;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}