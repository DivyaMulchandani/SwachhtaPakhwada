{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/divya%20mulchandani/OneDrive/Documents/RRU/SwachhtaPakhwada/src/app/api/generate-certificate/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\r\nimport { PDFDocument, StandardFonts, rgb } from 'pdf-lib';\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const body = await request.json();\r\n    const { name } = body;\r\n\r\n    // Create a new PDF document\r\n    const pdfDoc = await PDFDocument.create();\r\n    const page = pdfDoc.addPage([595, 842]); // Portrait A4 size\r\n\r\n    // Use a standard font for maximum compatibility\r\n    const font = await pdfDoc.embedFont(StandardFonts.HelveticaBold);\r\n\r\n    // Prepare the name text\r\n    const text = name ? String(name).toUpperCase() : '';\r\n    const fontSize = 48;\r\n    const textWidth = font.widthOfTextAtSize(text, fontSize);\r\n\r\n    // Center the text on the page\r\n    const x = (595 - textWidth) / 2;\r\n    const y = (842 / 2) - (fontSize / 2);\r\n\r\n    page.drawText(text, {\r\n      x,\r\n      y,\r\n      size: fontSize,\r\n      font,\r\n      color: rgb(0, 0, 0), // Black\r\n    });\r\n\r\n    // Serialize the PDF\r\n    const pdfBytes = await pdfDoc.save();\r\n\r\n    // Return the PDF as a response\r\n    return new NextResponse(Buffer.from(pdfBytes), {\r\n      headers: {\r\n        'Content-Type': 'application/pdf',\r\n        'Content-Disposition': `attachment; filename=\"Certificate-${text.replace(/\\s+/g, '-') || 'recipient'}.pdf\"`,\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.error('Error generating certificate:', error);\r\n    return NextResponse.json(\r\n      { success: false, error: 'Failed to generate certificate' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AAAA;AAAA;;;AAEO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,EAAE,IAAI,EAAE,GAAG;QAEjB,4BAA4B;QAC5B,MAAM,SAAS,MAAM,iKAAW,CAAC,MAAM;QACvC,MAAM,OAAO,OAAO,OAAO,CAAC;YAAC;YAAK;SAAI,GAAG,mBAAmB;QAE5D,gDAAgD;QAChD,MAAM,OAAO,MAAM,OAAO,SAAS,CAAC,2KAAa,CAAC,aAAa;QAE/D,wBAAwB;QACxB,MAAM,OAAO,OAAO,OAAO,MAAM,WAAW,KAAK;QACjD,MAAM,WAAW;QACjB,MAAM,YAAY,KAAK,iBAAiB,CAAC,MAAM;QAE/C,8BAA8B;QAC9B,MAAM,IAAI,CAAC,MAAM,SAAS,IAAI;QAC9B,MAAM,IAAI,AAAC,MAAM,IAAM,WAAW;QAElC,KAAK,QAAQ,CAAC,MAAM;YAClB;YACA;YACA,MAAM;YACN;YACA,OAAO,IAAA,0JAAG,EAAC,GAAG,GAAG;QACnB;QAEA,oBAAoB;QACpB,MAAM,WAAW,MAAM,OAAO,IAAI;QAElC,+BAA+B;QAC/B,OAAO,IAAI,gJAAY,CAAC,OAAO,IAAI,CAAC,WAAW;YAC7C,SAAS;gBACP,gBAAgB;gBAChB,uBAAuB,CAAC,kCAAkC,EAAE,KAAK,OAAO,CAAC,QAAQ,QAAQ,YAAY,KAAK,CAAC;YAC7G;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,OAAO,gJAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAO,OAAO;QAAiC,GAC1D;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}